1
.MODEL SMALL
.STACK 100H
.CODE
MAIN PROC
    MOV AH,2
    MOV DL,4CH
    INT 21H
    MOV DL,55H
    INT 21H
    MOV DL,43H
    INT 21H
    MOV DL,53H
    INT 21H
    MOV DL,45H
    INT 21H
2
.MODEL SMALL
.STACK 100H
.CODE
MAIN PROC
    MOV AH,2
    MOV DL,40H
    INT 21H
    MOV DL,2AH
    INT 21H
    MOV DL,25H
    INT 21H
    MOV DL,24H
    INT 21H
    MOV DL,23H
    INT 21H  
    MOV DL,40H
    INT 21H
3
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB "ENTER A NUMBER: $"
MSG2 DB "ENTER ANOTHER NUMBER:  $"
MSG3 DB "SUM IS: $"

.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS, AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BL,AL

    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG2
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV CL,AL

    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG3
    MOV AH,9
    INT 21H

    ADD BL,CL
    MOV AH,2
    SUB BL,48
    MOV DL,BL
    INT 21H
4
.MODEL SMALL
.STACK 100H

.DATA
MSG1 DB "ENTER A NUMBER: $"
MSG2 DB "ENTER ANOTHER NUMBER: $"
MSG3 DB "ANSWER: $"

.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS, AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG2
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV CL,AL

    SUB BL,CL
    ADD BL,30H

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG3
    MOV AH,9
    INT 21H

    MOV AH,2
    MOV DL,BL
    INT 21H
5
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB "MICROPROCESSOR$"
MSG2 DB "ASSEMBLY LANGUAGE$"
MSG3 DB "COMPUTER INTERFACING SESSION$"
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H
    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H
    LEA DX,MSG2
    MOV AH,9
    INT 21H
    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H
    LEA DX,MSG3
    MOV AH,9
    INT 21H
6
.MODEL SMALL
.STACK 100H
.DATA
VAR1 DB 33H ; 33H=3
VAR2 DB ?
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    MOV AH,1
    INT 21H
    MOV VAR2,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H
    
    MOV AH,2
    MOV DL,VAR1
    INT 21H
    MOV DL,VAR2
    INT 21H
7
.MODEL SMALL
.STACK 100H
.DATA
MSG DB "Enter a ALPHABET: $"
VAR1 DB ?
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX
    
    MOV AH,9
    LEA DX,MSG
    INT 21H
    
    MOV AH,1
    INT 21H
    MOV VAR1,AL
           
    ;CONVERT G -> 7
    SUB VAR2,10H
           
    MOV AH,2
    MOV DL,VAR1
    INT 21H
8
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB "Enter a number: $"
MSG2 DB "Enter another number: $"
MSG3 DB "FIRST NUMBER IS BIGGER$"
MSG4 DB "SECOND NUMBER IS BIGGER$"
MSG5 DB "BOTH ARE EQUAL$"
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG2
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV CL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    CMP BL,CL
    JG BORO
    JL COTO
    
    SOMAN:
        LEA DX,MSG5
        MOV AH,9
        INT 21H
        JMP EXIT
    
    BORO:
        LEA DX,MSG3
        MOV AH,9
        INT 21H
        JMP EXIT
    
    COTO:
        LEA DX,MSG4
        MOV AH,9
        INT 21H
        JMP EXIT
    EXIT:
        MOV AH,4CH
        INT 21H
        MAIN ENDP
END MAIN
9
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB "Enter a number: $"
MSG2 DB "IN RANGE [3-8]$"
MSG3 DB "NOT IN RANGE [3-8]$"
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    CMP BL,33H
    JGE CHECK
    JMP NIR

    CHECK:
        CMP BL,38H
        JLE IR
        JMP NIR
    NIR:
        LEA DX,MSG3
        MOV AH,9
        INT 21H
        JMP EXIT
    IR:
        LEA DX,MSG2
        MOV AH,9
        INT 21H
        JMP EXIT
    EXIT:
        MOV AH,4CH
        INT 21H
        MAIN ENDP
END MAIN
10
.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB "Enter first number: $"
MSG2 DB "Enter second number: $"
MSG3 DB "Enter third number: $"
.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX

    LEA DX,MSG1
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG2
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV CL,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    LEA DX,MSG3
    MOV AH,9
    INT 21H

    MOV AH,1
    INT 21H
    MOV BH,AL

    ;NEWLINE
    MOV AH,2
    MOV DL,0AH
    INT 21H
    MOV DL,0DH
    INT 21H

    CMP BL,CL
    JGE COND1
    JMP COND2
    COND1:
        CMP BL,BH
        JGE A
        JMP C
    COND2:
        CMP CL,BH
        JGE B
        JMP C
    A:
        MOV AH,2
        MOV DL,BL
        INT 21H
        JMP EXIT
    B:
        MOV AH,2
        MOV DL,CL
        INT 21H
        JMP EXIT
    C:
        MOV AH,2
        MOV DL,BH
        INT 21H
        JMP EXIT
    EXIT:
        MOV AH,4CH
        INT 21H
        MAIN ENDP
END MAIN
12
.MODEL SMALL
.STACK 100H
.CODE
MAIN PROC
    MOV BL,30H
    LABEL:
        CMP BL,39H
        JG EXIT
        MOV AH,2
        MOV DL,BL
        INT 21H
        INC BL
        JMP LABEL
    EXIT:
        MOV AH,4CH
        INT 21H
        MAIN ENDP
END MAIN
